name: Pull request workflow
on:
  pull_request:
    branches:
      - master
jobs:
  lint:
    name: Static code analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Run Rubocop
        run: bundle exec rubocop

  test:
    name: Test suite
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby: ['2.5', '2.6', '2.7', '3.0']
        gemfile: ['gemfiles/activerecord_5.0.2.gemfile',
        'gemfiles/activerecord_6.0.0.gemfile', 
        'gemfiles/activerecord_7.0.0.gemfile']
        exclude:
          - gemfile: 'gemfiles/activerecord_5.2.2.gemfile'
            ruby: '3.0' # rails 5.2 can't run on ruby 3.0
          - gemfile: 'gemfiles/activerecord_5.1.0.gemfile'
            ruby: '3.0' # rails 5.1 can't run on ruby 3.0
          - gemfile: 'gemfiles/activerecord_5.0.2.gemfile'
            ruby: '3.0' # rails 5.0 can't run on ruby 3.0
          - gemfile: 'gemfiles/activerecord_7.0.0.gemfile'
            ruby: '2.6' # rails 7.0 requires ruby 2.7+
          - gemfile: 'gemfiles/activerecord_7.0.0.gemfile'
            ruby: '2.5' # rails 7.0 requires ruby 2.7+
    services:
      postgres:
        image: postgres:14.7
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      RAILS_ENV: test
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      BUNDLE_GEMFILE: ${{ matrix.gemfile }}
      SPEC_DISABLE_DROP_DATABASE: 1
      SCHEMA: structure.sql
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true

      - name: Run RSpec
        run: bundle exec rspec -fd

  coverage:
    name: Test suite for coverage
    needs: test
    outputs:
      coverage: ${{ steps.coverage.outputs.coverage }}
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.7
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      RAILS_ENV: test
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      SCHEMA: structure.sql
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Run RSpec
        run: bundle exec rspec -fd

      - name: Check code coverage
        run: |
          echo "$( cat ./coverage/.last_run.json | egrep "${VALUE}" | grep -oE '\d+\.\d+' )"

      - name: Check code coverage
      id: coverage
      env:
        VALUE: "line"
      run: |
        COVERAGE="$( cat ./coverage/.last_run.json | egrep "${VALUE}" | grep -oE '\d+\.\d+' )"
        echo "##[set-output name=coverage;]${COVERAGE}"
    

